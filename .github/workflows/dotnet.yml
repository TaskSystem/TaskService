name: .NET CI/CD with SonarCloud

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout de code
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Setup .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      # Restore dependencies voor alle services
      - name: Restore dependencies for TaskService
        run: dotnet restore TaskSystem/TaskService.sln


      - name: Restore dependencies for UserService
        run: dotnet restore UserService/UserService.sln

      - name: Restore dependencies for NotificationService
        run: dotnet restore NotificationService/NotificationService.sln

      # Build alle services
      - name: Build TaskService
        run: dotnet build TaskSystem/TaskService.sln --no-restore


      - name: Build UserService
        run: dotnet build UserService/UserService.sln --no-restore

      - name: Build NotificationService
        run: dotnet build NotificationService/NotificationService.sln --no-restore
        
      # Test de services
      - name: Test TaskService
        run: dotnet test TaskSystem/TaskService.sln --no-build --verbosity normal


      - name: Test UserService
        run: dotnet test UserService/UserService.sln --no-build --verbosity normal

      - name: Test NotificationService
        run: dotnet test NotificationService/NotificationService.sln --no-build --verbosity normal

      # Docker image bouwen voor TaskService
      - name: Build Docker image for TaskService
        run: |
          docker build -t zakaria469980/taskservice-taskservice:latest TaskSystem/TaskService/Dockerfile .


      # Docker image bouwen voor UserService
      - name: Build Docker image for UserService
        run: |
          docker build -t zakaria469980/taskservice-userservice:latest ./UserService/UserService

      # Docker image bouwen voor NotificationService
      - name: Build Docker image for NotificationService
        run: |
          docker build -t zakaria469980/taskservice-notificationservice:latest ./NotificationService/NotificationService

      # Log in bij Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Push Docker images naar Docker Hub
      - name: Push Docker images to Docker Hub
        run: |
          docker push zakaria469980/taskservice-taskservice:latest
          docker push zakaria469980/userservice:latest
          docker push zakaria469980/notificationservice:latest
