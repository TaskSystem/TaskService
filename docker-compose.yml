services:

  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "5672:5672"     # RabbitMQ protocol
      - "15672:15672"   # RabbitMQ Management UI
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672/api/health"]
      interval: 30s
      timeout: 10s
      retries: 10

  taskservice:
    build:
      context: ./TaskSystem  # De map waar de Dockerfile en het projectbestand zich bevinden
      dockerfile: TaskService/Dockerfile  # De naam van de Dockerfile
    ports:
      - "5000:8080"  # Expose port 80 van de container naar port 5000 op de host
    environment:
      - ASPNETCORE_ENVIRONMENT=Development  # Zet de omgeving als Development (optioneel)

  userservice:
    build:
      context: ./UserService/UserService  # Pad naar je UserService directory
      dockerfile: Dockerfile
    ports:
      - "5002:8080"  # Poort configuratie, pas aan als dat nodig is
    environment:
      - ASPNETCORE_ENVIRONMENT=Development  # Zet de omgeving als Development (optioneel)

  notificationservice:
    build:
      context: ./NotificationService/NotificationService
      dockerfile: Dockerfile
    ports:
      - "5004:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - SENDGRID_API_KEY=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
    depends_on:
      - rabbitmq

  
  
